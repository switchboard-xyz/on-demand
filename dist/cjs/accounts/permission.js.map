{"version":3,"file":"permission.js","sourceRoot":"","sources":["../../../src/accounts/permission.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,IAAY,qBAGX;AAHD,WAAY,qBAAqB;IAC/B,mGAA8B,CAAA;IAC9B,qGAA+B,CAAA;AACjC,CAAC,EAHW,qBAAqB,qCAArB,qBAAqB,QAGhC;AAED;;GAEG;AACH,MAAa,UAAU;IACrB;;;;;;OAMG;IACH,MAAM,CAAO,KAAK,CAChB,OAAgB,EAChB,MAMC;;;YAED,MAAM,KAAK,GAAI,OAAO,CAAC,QAAgB,CAAC,MAAM,CAAC,KAAK,CAAC;YACrD,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,aAAa,CAChD;gBACE,MAAM,EAAE,MAAA,MAAM,CAAC,MAAM,mCAAI,KAAK;gBAC9B,UAAU,EAAE,MAAM,CAAC,UAAU;aAC9B,EACD;gBACE,QAAQ,EAAE;oBACR,OAAO,EAAE,MAAM,CAAC,OAAO;oBACvB,SAAS,EAAE,MAAM,CAAC,SAAS;iBAC5B;gBACD,iBAAiB,EAAE;oBACjB,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;iBAC9D;gBACD,OAAO,EAAE,CAAC,KAAK,CAAC;aACjB,CACF,CAAC;YACF,OAAO,EAAE,CAAC;QACZ,CAAC;KAAA;IAED;;OAEG;IACH,gBAAuB,CAAC;CACzB;AA1CD,gCA0CC","sourcesContent":["import type { Program } from \"@coral-xyz/anchor-30\";\nimport type { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\n\nexport enum SwitchboardPermission {\n  PermitOracleHeartbeat = 1 << 0,\n  PermitOracleQueueUsage = 1 << 1,\n}\n\n/**\n *  Abstraction around the Switchboard-On-Demand Permission meta-account\n */\nexport class Permission {\n  /**\n   *  Set the permission for a given granter and grantee.\n   *\n   *  @param program - The program that owns the permission account.\n   *  @param params - The parameters for setting the permission.\n   *  @returns A promise that resolves to the transaction instruction.\n   */\n  static async setIx(\n    program: Program,\n    params: {\n      authority: PublicKey;\n      granter: PublicKey;\n      grantee: PublicKey;\n      enable?: boolean;\n      permission: SwitchboardPermission;\n    }\n  ): Promise<TransactionInstruction> {\n    const payer = (program.provider as any).wallet.payer;\n    const ix = await program.instruction.permissionSet(\n      {\n        enable: params.enable ?? false,\n        permission: params.permission,\n      },\n      {\n        accounts: {\n          granter: params.granter,\n          authority: params.authority,\n        },\n        remainingAccounts: [\n          { pubkey: params.grantee, isSigner: false, isWritable: true },\n        ],\n        signers: [payer],\n      }\n    );\n    return ix;\n  }\n\n  /**\n   *  Disable object instantiation.\n   */\n  private constructor() {}\n}\n"]}