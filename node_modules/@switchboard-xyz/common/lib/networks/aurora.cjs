"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SWITCHBOARD_AURORA_CONFIG = exports.SWITCHBOARD_AURORA_TESTNET_CONFIG = exports.SWITCHBOARD_AURORA_MAINNET_CONFIG = void 0;
exports.SWITCHBOARD_AURORA_MAINNET_CONFIG = {
    chain: "aurora",
    chainId: 1313161554,
    networkName: "Mainnet",
    address: "0x6E7dabEF37A8Da80b111344dB41b223F24eAA903",
    sbPushOracle: "0x49a19751978F36c133D9cE26e61fab9795b5826B",
    metadata: {
        defaultRpcUrl: "https://mainnet.aurora.dev",
        defaultExplorer: "https://aurorascan.dev",
    },
    queues: [],
    attestationQueues: [
        {
            name: "SwitchboardLabs Attestation Queue",
            address: "",
        },
    ],
};
exports.SWITCHBOARD_AURORA_TESTNET_CONFIG = {
    chain: "aurora",
    chainId: 1313161555,
    networkName: "Testnet",
    address: "0x7d05d5745499D8cc68FA4Eb5dbd45df53E9c3f1f",
    sbPushOracle: "0xc9d804F1e904cA0912D46E0C02600f75563A4988",
    metadata: {
        defaultRpcUrl: "https://testnet.aurora.dev",
        defaultExplorer: "https://testnet.aurorascan.dev",
    },
    queues: [],
    attestationQueues: [
        {
            name: "SwitchboardLabs Attestation Queue",
            address: "0x455c706AF00af9fCFDA04746Be34c3051aAAD1d4",
        },
    ],
};
/**
@defaultValue the default Aurora configuration

```json
{
  "mainnet": {
    "chain": "aurora",
    "chainId": 1313161554,
    "networkName": "Mainnet",
    "address": "0x6E7dabEF37A8Da80b111344dB41b223F24eAA903",
    "sbPushOracle": "0x49a19751978F36c133D9cE26e61fab9795b5826B",
    "metadata": {
      "defaultRpcUrl": "https://mainnet.aurora.dev",
      "defaultExplorer": "https://aurorascan.dev"
    },
    "queues": [],
    "attestationQueues": [
      {
        "name": "SwitchboardLabs Attestation Queue",
        "address": ""
      }
    ]
  },
  "testnet": {
    "chain": "aurora",
    "chainId": 1313161555,
    "networkName": "Testnet",
    "address": "0x7d05d5745499D8cc68FA4Eb5dbd45df53E9c3f1f",
    "sbPushOracle": "0xc9d804F1e904cA0912D46E0C02600f75563A4988",
    "metadata": {
      "defaultRpcUrl": "https://testnet.aurora.dev",
      "defaultExplorer": "https://testnet.aurorascan.dev"
    },
    "queues": [],
    "attestationQueues": [
      {
        "name": "SwitchboardLabs Attestation Queue",
        "address": "0x455c706AF00af9fCFDA04746Be34c3051aAAD1d4"
      }
    ]
  }
}
```
 */
exports.SWITCHBOARD_AURORA_CONFIG = {
    mainnet: exports.SWITCHBOARD_AURORA_MAINNET_CONFIG,
    testnet: exports.SWITCHBOARD_AURORA_TESTNET_CONFIG,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyb3JhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL25ldHdvcmtzL2F1cm9yYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFYSxRQUFBLGlDQUFpQyxHQUFzQjtJQUNsRSxLQUFLLEVBQUUsUUFBUTtJQUNmLE9BQU8sRUFBRSxVQUFVO0lBQ25CLFdBQVcsRUFBRSxTQUFTO0lBQ3RCLE9BQU8sRUFBRSw0Q0FBNEM7SUFDckQsWUFBWSxFQUFFLDRDQUE0QztJQUMxRCxRQUFRLEVBQUU7UUFDUixhQUFhLEVBQUUsNEJBQTRCO1FBQzNDLGVBQWUsRUFBRSx3QkFBd0I7S0FDMUM7SUFDRCxNQUFNLEVBQUUsRUFBRTtJQUNWLGlCQUFpQixFQUFFO1FBQ2pCO1lBQ0UsSUFBSSxFQUFFLG1DQUFtQztZQUN6QyxPQUFPLEVBQUUsRUFBRTtTQUNaO0tBQ0Y7Q0FDRixDQUFDO0FBRVcsUUFBQSxpQ0FBaUMsR0FBc0I7SUFDbEUsS0FBSyxFQUFFLFFBQVE7SUFDZixPQUFPLEVBQUUsVUFBVTtJQUNuQixXQUFXLEVBQUUsU0FBUztJQUN0QixPQUFPLEVBQUUsNENBQTRDO0lBQ3JELFlBQVksRUFBRSw0Q0FBNEM7SUFDMUQsUUFBUSxFQUFFO1FBQ1IsYUFBYSxFQUFFLDRCQUE0QjtRQUMzQyxlQUFlLEVBQUUsZ0NBQWdDO0tBQ2xEO0lBQ0QsTUFBTSxFQUFFLEVBQUU7SUFDVixpQkFBaUIsRUFBRTtRQUNqQjtZQUNFLElBQUksRUFBRSxtQ0FBbUM7WUFDekMsT0FBTyxFQUFFLDRDQUE0QztTQUN0RDtLQUNGO0NBQ0YsQ0FBQztBQUVGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMkNHO0FBQ1UsUUFBQSx5QkFBeUIsR0FBaUI7SUFDckQsT0FBTyxFQUFFLHlDQUFpQztJQUMxQyxPQUFPLEVBQUUseUNBQWlDO0NBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IElDaGFpbkNvbmZpZywgSUV2bU5ldHdvcmtDb25maWcgfSBmcm9tIFwiLi90eXBlcy5qc1wiO1xuXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfQVVST1JBX01BSU5ORVRfQ09ORklHOiBJRXZtTmV0d29ya0NvbmZpZyA9IHtcbiAgY2hhaW46IFwiYXVyb3JhXCIsXG4gIGNoYWluSWQ6IDEzMTMxNjE1NTQsXG4gIG5ldHdvcmtOYW1lOiBcIk1haW5uZXRcIixcbiAgYWRkcmVzczogXCIweDZFN2RhYkVGMzdBOERhODBiMTExMzQ0ZEI0MWIyMjNGMjRlQUE5MDNcIixcbiAgc2JQdXNoT3JhY2xlOiBcIjB4NDlhMTk3NTE5NzhGMzZjMTMzRDljRTI2ZTYxZmFiOTc5NWI1ODI2QlwiLFxuICBtZXRhZGF0YToge1xuICAgIGRlZmF1bHRScGNVcmw6IFwiaHR0cHM6Ly9tYWlubmV0LmF1cm9yYS5kZXZcIixcbiAgICBkZWZhdWx0RXhwbG9yZXI6IFwiaHR0cHM6Ly9hdXJvcmFzY2FuLmRldlwiLFxuICB9LFxuICBxdWV1ZXM6IFtdLFxuICBhdHRlc3RhdGlvblF1ZXVlczogW1xuICAgIHtcbiAgICAgIG5hbWU6IFwiU3dpdGNoYm9hcmRMYWJzIEF0dGVzdGF0aW9uIFF1ZXVlXCIsXG4gICAgICBhZGRyZXNzOiBcIlwiLFxuICAgIH0sXG4gIF0sXG59O1xuXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfQVVST1JBX1RFU1RORVRfQ09ORklHOiBJRXZtTmV0d29ya0NvbmZpZyA9IHtcbiAgY2hhaW46IFwiYXVyb3JhXCIsXG4gIGNoYWluSWQ6IDEzMTMxNjE1NTUsXG4gIG5ldHdvcmtOYW1lOiBcIlRlc3RuZXRcIixcbiAgYWRkcmVzczogXCIweDdkMDVkNTc0NTQ5OUQ4Y2M2OEZBNEViNWRiZDQ1ZGY1M0U5YzNmMWZcIixcbiAgc2JQdXNoT3JhY2xlOiBcIjB4YzlkODA0RjFlOTA0Y0EwOTEyRDQ2RTBDMDI2MDBmNzU1NjNBNDk4OFwiLFxuICBtZXRhZGF0YToge1xuICAgIGRlZmF1bHRScGNVcmw6IFwiaHR0cHM6Ly90ZXN0bmV0LmF1cm9yYS5kZXZcIixcbiAgICBkZWZhdWx0RXhwbG9yZXI6IFwiaHR0cHM6Ly90ZXN0bmV0LmF1cm9yYXNjYW4uZGV2XCIsXG4gIH0sXG4gIHF1ZXVlczogW10sXG4gIGF0dGVzdGF0aW9uUXVldWVzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJTd2l0Y2hib2FyZExhYnMgQXR0ZXN0YXRpb24gUXVldWVcIixcbiAgICAgIGFkZHJlc3M6IFwiMHg0NTVjNzA2QUYwMGFmOWZDRkRBMDQ3NDZCZTM0YzMwNTFhQUFEMWQ0XCIsXG4gICAgfSxcbiAgXSxcbn07XG5cbi8qKlxuQGRlZmF1bHRWYWx1ZSB0aGUgZGVmYXVsdCBBdXJvcmEgY29uZmlndXJhdGlvblxuXG5gYGBqc29uXG57XG4gIFwibWFpbm5ldFwiOiB7XG4gICAgXCJjaGFpblwiOiBcImF1cm9yYVwiLFxuICAgIFwiY2hhaW5JZFwiOiAxMzEzMTYxNTU0LFxuICAgIFwibmV0d29ya05hbWVcIjogXCJNYWlubmV0XCIsXG4gICAgXCJhZGRyZXNzXCI6IFwiMHg2RTdkYWJFRjM3QThEYTgwYjExMTM0NGRCNDFiMjIzRjI0ZUFBOTAzXCIsXG4gICAgXCJzYlB1c2hPcmFjbGVcIjogXCIweDQ5YTE5NzUxOTc4RjM2YzEzM0Q5Y0UyNmU2MWZhYjk3OTViNTgyNkJcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwiZGVmYXVsdFJwY1VybFwiOiBcImh0dHBzOi8vbWFpbm5ldC5hdXJvcmEuZGV2XCIsXG4gICAgICBcImRlZmF1bHRFeHBsb3JlclwiOiBcImh0dHBzOi8vYXVyb3Jhc2Nhbi5kZXZcIlxuICAgIH0sXG4gICAgXCJxdWV1ZXNcIjogW10sXG4gICAgXCJhdHRlc3RhdGlvblF1ZXVlc1wiOiBbXG4gICAgICB7XG4gICAgICAgIFwibmFtZVwiOiBcIlN3aXRjaGJvYXJkTGFicyBBdHRlc3RhdGlvbiBRdWV1ZVwiLFxuICAgICAgICBcImFkZHJlc3NcIjogXCJcIlxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAgXCJ0ZXN0bmV0XCI6IHtcbiAgICBcImNoYWluXCI6IFwiYXVyb3JhXCIsXG4gICAgXCJjaGFpbklkXCI6IDEzMTMxNjE1NTUsXG4gICAgXCJuZXR3b3JrTmFtZVwiOiBcIlRlc3RuZXRcIixcbiAgICBcImFkZHJlc3NcIjogXCIweDdkMDVkNTc0NTQ5OUQ4Y2M2OEZBNEViNWRiZDQ1ZGY1M0U5YzNmMWZcIixcbiAgICBcInNiUHVzaE9yYWNsZVwiOiBcIjB4YzlkODA0RjFlOTA0Y0EwOTEyRDQ2RTBDMDI2MDBmNzU1NjNBNDk4OFwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJkZWZhdWx0UnBjVXJsXCI6IFwiaHR0cHM6Ly90ZXN0bmV0LmF1cm9yYS5kZXZcIixcbiAgICAgIFwiZGVmYXVsdEV4cGxvcmVyXCI6IFwiaHR0cHM6Ly90ZXN0bmV0LmF1cm9yYXNjYW4uZGV2XCJcbiAgICB9LFxuICAgIFwicXVldWVzXCI6IFtdLFxuICAgIFwiYXR0ZXN0YXRpb25RdWV1ZXNcIjogW1xuICAgICAge1xuICAgICAgICBcIm5hbWVcIjogXCJTd2l0Y2hib2FyZExhYnMgQXR0ZXN0YXRpb24gUXVldWVcIixcbiAgICAgICAgXCJhZGRyZXNzXCI6IFwiMHg0NTVjNzA2QUYwMGFmOWZDRkRBMDQ3NDZCZTM0YzMwNTFhQUFEMWQ0XCJcbiAgICAgIH1cbiAgICBdXG4gIH1cbn1cbmBgYFxuICovXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfQVVST1JBX0NPTkZJRzogSUNoYWluQ29uZmlnID0ge1xuICBtYWlubmV0OiBTV0lUQ0hCT0FSRF9BVVJPUkFfTUFJTk5FVF9DT05GSUcsXG4gIHRlc3RuZXQ6IFNXSVRDSEJPQVJEX0FVUk9SQV9URVNUTkVUX0NPTkZJRyxcbn07XG4iXX0=