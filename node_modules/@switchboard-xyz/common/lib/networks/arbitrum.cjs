"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SWITCHBOARD_ARBITRUM_CONFIG = exports.SWITCHBOARD_ARBITRUM_SEPOLIA_CONFIG = exports.SWITCHBOARD_ARBITRUM_TESTNET_CONFIG = exports.SWITCHBOARD_ARBITRUM_MAINNET_CONFIG = void 0;
exports.SWITCHBOARD_ARBITRUM_MAINNET_CONFIG = {
    chain: "arbitrum",
    chainId: 42161,
    networkName: "Mainnet",
    address: "0xE30582eBD4A678065a61975Da113bD2e7aE38679",
    sbPushOracle: "0xD33F9a409bF48f9aFb8f5c70C949AF8E8E11449F",
    metadata: {
        defaultRpcUrl: "https://arb1.arbitrum.io/rpc",
        defaultExplorer: "https://arbiscan.io",
    },
    queues: [],
    attestationQueues: [
        {
            name: "SwitchboardLabs Attestation Queue",
            address: "0x2D3385BFF20b3EEBA91caEA535569F2dc55c2980",
        },
    ],
};
exports.SWITCHBOARD_ARBITRUM_TESTNET_CONFIG = {
    chain: "arbitrum",
    chainId: 421613,
    networkName: "Goerli",
    address: "0xA3c9F9F6E40282e1366bdC01C1D30F7F7F58888e",
    sbPushOracle: "0xDf8bed962Af2EA8E61F57B35294436dCc3eF80dd",
    metadata: {
        defaultRpcUrl: "https://goerli-rollup.arbitrum.io/rpc",
        defaultExplorer: "https://goerli.arbiscan.io",
    },
    queues: [],
    attestationQueues: [
        {
            name: "SwitchboardLabs Attestation Queue",
            address: "0x54f8A91bE5baAD3E2368b00A11bF4012EA6b031F",
        },
    ],
};
exports.SWITCHBOARD_ARBITRUM_SEPOLIA_CONFIG = {
    chain: "arbitrum",
    chainId: 421614,
    networkName: "Sepolia",
    address: "0x0d251E9F64Fb3a146af61bB99d80471893b20cCF",
    sbPushOracle: "0xf680EcD48f257795070A655979f23E3fd3e9c635",
    metadata: {
        defaultRpcUrl: "https://sepolia-rollup.arbitrum.io/rpc",
        defaultExplorer: "https://sepolia.arbiscan.io",
    },
    queues: [],
    attestationQueues: [
        {
            name: "SwitchboardLabs Attestation Queue",
            address: "0x3e84bb41e96F90A93D0Ce930e75Cf47a2b262Ace",
        },
    ],
};
/**
@defaultValue the default Arbitrum configuration

```json
{
  "mainnet": {
    "chain": "arbitrum",
    "chainId": 42161,
    "networkName": "Mainnet",
    "address": "0xE30582eBD4A678065a61975Da113bD2e7aE38679",
    "sbPushOracle": "0xD33F9a409bF48f9aFb8f5c70C949AF8E8E11449F",
    "metadata": {
      "defaultRpcUrl": "https://arb1.arbitrum.io/rpc",
      "defaultExplorer": "https://arbiscan.io"
    },
    "queues": [],
    "attestationQueues": [
      {
        "name": "SwitchboardLabs Attestation Queue",
        "address": "0x2D3385BFF20b3EEBA91caEA535569F2dc55c2980"
      }
    ]
  },
  "testnet": {
    "chain": "arbitrum",
    "chainId": 421613,
    "networkName": "Goerli",
    "address": "0xA3c9F9F6E40282e1366bdC01C1D30F7F7F58888e",
    "sbPushOracle": "0xDf8bed962Af2EA8E61F57B35294436dCc3eF80dd",
    "metadata": {
      "defaultRpcUrl": "https://goerli-rollup.arbitrum.io/rpc",
      "defaultExplorer": "https://goerli.arbiscan.io"
    },
    "queues": [],
    "attestationQueues": [
      {
        "name": "SwitchboardLabs Attestation Queue",
        "address": "0x54f8A91bE5baAD3E2368b00A11bF4012EA6b031F"
      }
    ]
  }
}
```
 */
exports.SWITCHBOARD_ARBITRUM_CONFIG = {
    mainnet: exports.SWITCHBOARD_ARBITRUM_MAINNET_CONFIG,
    testnet: exports.SWITCHBOARD_ARBITRUM_TESTNET_CONFIG,
    sepolia: exports.SWITCHBOARD_ARBITRUM_SEPOLIA_CONFIG,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJiaXRydW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbmV0d29ya3MvYXJiaXRydW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRWEsUUFBQSxtQ0FBbUMsR0FBc0I7SUFDcEUsS0FBSyxFQUFFLFVBQVU7SUFDakIsT0FBTyxFQUFFLEtBQUs7SUFDZCxXQUFXLEVBQUUsU0FBUztJQUN0QixPQUFPLEVBQUUsNENBQTRDO0lBQ3JELFlBQVksRUFBRSw0Q0FBNEM7SUFDMUQsUUFBUSxFQUFFO1FBQ1IsYUFBYSxFQUFFLDhCQUE4QjtRQUM3QyxlQUFlLEVBQUUscUJBQXFCO0tBQ3ZDO0lBQ0QsTUFBTSxFQUFFLEVBQUU7SUFDVixpQkFBaUIsRUFBRTtRQUNqQjtZQUNFLElBQUksRUFBRSxtQ0FBbUM7WUFDekMsT0FBTyxFQUFFLDRDQUE0QztTQUN0RDtLQUNGO0NBQ0YsQ0FBQztBQUVXLFFBQUEsbUNBQW1DLEdBQXNCO0lBQ3BFLEtBQUssRUFBRSxVQUFVO0lBQ2pCLE9BQU8sRUFBRSxNQUFNO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsT0FBTyxFQUFFLDRDQUE0QztJQUNyRCxZQUFZLEVBQUUsNENBQTRDO0lBQzFELFFBQVEsRUFBRTtRQUNSLGFBQWEsRUFBRSx1Q0FBdUM7UUFDdEQsZUFBZSxFQUFFLDRCQUE0QjtLQUM5QztJQUNELE1BQU0sRUFBRSxFQUFFO0lBQ1YsaUJBQWlCLEVBQUU7UUFDakI7WUFDRSxJQUFJLEVBQUUsbUNBQW1DO1lBQ3pDLE9BQU8sRUFBRSw0Q0FBNEM7U0FDdEQ7S0FDRjtDQUNGLENBQUM7QUFFVyxRQUFBLG1DQUFtQyxHQUFzQjtJQUNwRSxLQUFLLEVBQUUsVUFBVTtJQUNqQixPQUFPLEVBQUUsTUFBTTtJQUNmLFdBQVcsRUFBRSxTQUFTO0lBQ3RCLE9BQU8sRUFBRSw0Q0FBNEM7SUFDckQsWUFBWSxFQUFFLDRDQUE0QztJQUMxRCxRQUFRLEVBQUU7UUFDUixhQUFhLEVBQUUsd0NBQXdDO1FBQ3ZELGVBQWUsRUFBRSw2QkFBNkI7S0FDL0M7SUFDRCxNQUFNLEVBQUUsRUFBRTtJQUNWLGlCQUFpQixFQUFFO1FBQ2pCO1lBQ0UsSUFBSSxFQUFFLG1DQUFtQztZQUN6QyxPQUFPLEVBQUUsNENBQTRDO1NBQ3REO0tBQ0Y7Q0FDRixDQUFDO0FBRUY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0EyQ0c7QUFDVSxRQUFBLDJCQUEyQixHQUFpQjtJQUN2RCxPQUFPLEVBQUUsMkNBQW1DO0lBQzVDLE9BQU8sRUFBRSwyQ0FBbUM7SUFDNUMsT0FBTyxFQUFFLDJDQUFtQztDQUM3QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBJQ2hhaW5Db25maWcsIElFdm1OZXR3b3JrQ29uZmlnIH0gZnJvbSBcIi4vdHlwZXMuanNcIjtcblxuZXhwb3J0IGNvbnN0IFNXSVRDSEJPQVJEX0FSQklUUlVNX01BSU5ORVRfQ09ORklHOiBJRXZtTmV0d29ya0NvbmZpZyA9IHtcbiAgY2hhaW46IFwiYXJiaXRydW1cIixcbiAgY2hhaW5JZDogNDIxNjEsXG4gIG5ldHdvcmtOYW1lOiBcIk1haW5uZXRcIixcbiAgYWRkcmVzczogXCIweEUzMDU4MmVCRDRBNjc4MDY1YTYxOTc1RGExMTNiRDJlN2FFMzg2NzlcIixcbiAgc2JQdXNoT3JhY2xlOiBcIjB4RDMzRjlhNDA5YkY0OGY5YUZiOGY1YzcwQzk0OUFGOEU4RTExNDQ5RlwiLFxuICBtZXRhZGF0YToge1xuICAgIGRlZmF1bHRScGNVcmw6IFwiaHR0cHM6Ly9hcmIxLmFyYml0cnVtLmlvL3JwY1wiLFxuICAgIGRlZmF1bHRFeHBsb3JlcjogXCJodHRwczovL2FyYmlzY2FuLmlvXCIsXG4gIH0sXG4gIHF1ZXVlczogW10sXG4gIGF0dGVzdGF0aW9uUXVldWVzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJTd2l0Y2hib2FyZExhYnMgQXR0ZXN0YXRpb24gUXVldWVcIixcbiAgICAgIGFkZHJlc3M6IFwiMHgyRDMzODVCRkYyMGIzRUVCQTkxY2FFQTUzNTU2OUYyZGM1NWMyOTgwXCIsXG4gICAgfSxcbiAgXSxcbn07XG5cbmV4cG9ydCBjb25zdCBTV0lUQ0hCT0FSRF9BUkJJVFJVTV9URVNUTkVUX0NPTkZJRzogSUV2bU5ldHdvcmtDb25maWcgPSB7XG4gIGNoYWluOiBcImFyYml0cnVtXCIsXG4gIGNoYWluSWQ6IDQyMTYxMyxcbiAgbmV0d29ya05hbWU6IFwiR29lcmxpXCIsXG4gIGFkZHJlc3M6IFwiMHhBM2M5RjlGNkU0MDI4MmUxMzY2YmRDMDFDMUQzMEY3RjdGNTg4ODhlXCIsXG4gIHNiUHVzaE9yYWNsZTogXCIweERmOGJlZDk2MkFmMkVBOEU2MUY1N0IzNTI5NDQzNmRDYzNlRjgwZGRcIixcbiAgbWV0YWRhdGE6IHtcbiAgICBkZWZhdWx0UnBjVXJsOiBcImh0dHBzOi8vZ29lcmxpLXJvbGx1cC5hcmJpdHJ1bS5pby9ycGNcIixcbiAgICBkZWZhdWx0RXhwbG9yZXI6IFwiaHR0cHM6Ly9nb2VybGkuYXJiaXNjYW4uaW9cIixcbiAgfSxcbiAgcXVldWVzOiBbXSxcbiAgYXR0ZXN0YXRpb25RdWV1ZXM6IFtcbiAgICB7XG4gICAgICBuYW1lOiBcIlN3aXRjaGJvYXJkTGFicyBBdHRlc3RhdGlvbiBRdWV1ZVwiLFxuICAgICAgYWRkcmVzczogXCIweDU0ZjhBOTFiRTViYUFEM0UyMzY4YjAwQTExYkY0MDEyRUE2YjAzMUZcIixcbiAgICB9LFxuICBdLFxufTtcblxuZXhwb3J0IGNvbnN0IFNXSVRDSEJPQVJEX0FSQklUUlVNX1NFUE9MSUFfQ09ORklHOiBJRXZtTmV0d29ya0NvbmZpZyA9IHtcbiAgY2hhaW46IFwiYXJiaXRydW1cIixcbiAgY2hhaW5JZDogNDIxNjE0LFxuICBuZXR3b3JrTmFtZTogXCJTZXBvbGlhXCIsXG4gIGFkZHJlc3M6IFwiMHgwZDI1MUU5RjY0RmIzYTE0NmFmNjFiQjk5ZDgwNDcxODkzYjIwY0NGXCIsXG4gIHNiUHVzaE9yYWNsZTogXCIweGY2ODBFY0Q0OGYyNTc3OTUwNzBBNjU1OTc5ZjIzRTNmZDNlOWM2MzVcIixcbiAgbWV0YWRhdGE6IHtcbiAgICBkZWZhdWx0UnBjVXJsOiBcImh0dHBzOi8vc2Vwb2xpYS1yb2xsdXAuYXJiaXRydW0uaW8vcnBjXCIsXG4gICAgZGVmYXVsdEV4cGxvcmVyOiBcImh0dHBzOi8vc2Vwb2xpYS5hcmJpc2Nhbi5pb1wiLFxuICB9LFxuICBxdWV1ZXM6IFtdLFxuICBhdHRlc3RhdGlvblF1ZXVlczogW1xuICAgIHtcbiAgICAgIG5hbWU6IFwiU3dpdGNoYm9hcmRMYWJzIEF0dGVzdGF0aW9uIFF1ZXVlXCIsXG4gICAgICBhZGRyZXNzOiBcIjB4M2U4NGJiNDFlOTZGOTBBOTNEMENlOTMwZTc1Q2Y0N2EyYjI2MkFjZVwiLFxuICAgIH0sXG4gIF0sXG59O1xuXG4vKipcbkBkZWZhdWx0VmFsdWUgdGhlIGRlZmF1bHQgQXJiaXRydW0gY29uZmlndXJhdGlvblxuXG5gYGBqc29uXG57XG4gIFwibWFpbm5ldFwiOiB7XG4gICAgXCJjaGFpblwiOiBcImFyYml0cnVtXCIsXG4gICAgXCJjaGFpbklkXCI6IDQyMTYxLFxuICAgIFwibmV0d29ya05hbWVcIjogXCJNYWlubmV0XCIsXG4gICAgXCJhZGRyZXNzXCI6IFwiMHhFMzA1ODJlQkQ0QTY3ODA2NWE2MTk3NURhMTEzYkQyZTdhRTM4Njc5XCIsXG4gICAgXCJzYlB1c2hPcmFjbGVcIjogXCIweEQzM0Y5YTQwOWJGNDhmOWFGYjhmNWM3MEM5NDlBRjhFOEUxMTQ0OUZcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwiZGVmYXVsdFJwY1VybFwiOiBcImh0dHBzOi8vYXJiMS5hcmJpdHJ1bS5pby9ycGNcIixcbiAgICAgIFwiZGVmYXVsdEV4cGxvcmVyXCI6IFwiaHR0cHM6Ly9hcmJpc2Nhbi5pb1wiXG4gICAgfSxcbiAgICBcInF1ZXVlc1wiOiBbXSxcbiAgICBcImF0dGVzdGF0aW9uUXVldWVzXCI6IFtcbiAgICAgIHtcbiAgICAgICAgXCJuYW1lXCI6IFwiU3dpdGNoYm9hcmRMYWJzIEF0dGVzdGF0aW9uIFF1ZXVlXCIsXG4gICAgICAgIFwiYWRkcmVzc1wiOiBcIjB4MkQzMzg1QkZGMjBiM0VFQkE5MWNhRUE1MzU1NjlGMmRjNTVjMjk4MFwiXG4gICAgICB9XG4gICAgXVxuICB9LFxuICBcInRlc3RuZXRcIjoge1xuICAgIFwiY2hhaW5cIjogXCJhcmJpdHJ1bVwiLFxuICAgIFwiY2hhaW5JZFwiOiA0MjE2MTMsXG4gICAgXCJuZXR3b3JrTmFtZVwiOiBcIkdvZXJsaVwiLFxuICAgIFwiYWRkcmVzc1wiOiBcIjB4QTNjOUY5RjZFNDAyODJlMTM2NmJkQzAxQzFEMzBGN0Y3RjU4ODg4ZVwiLFxuICAgIFwic2JQdXNoT3JhY2xlXCI6IFwiMHhEZjhiZWQ5NjJBZjJFQThFNjFGNTdCMzUyOTQ0MzZkQ2MzZUY4MGRkXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcImRlZmF1bHRScGNVcmxcIjogXCJodHRwczovL2dvZXJsaS1yb2xsdXAuYXJiaXRydW0uaW8vcnBjXCIsXG4gICAgICBcImRlZmF1bHRFeHBsb3JlclwiOiBcImh0dHBzOi8vZ29lcmxpLmFyYmlzY2FuLmlvXCJcbiAgICB9LFxuICAgIFwicXVldWVzXCI6IFtdLFxuICAgIFwiYXR0ZXN0YXRpb25RdWV1ZXNcIjogW1xuICAgICAge1xuICAgICAgICBcIm5hbWVcIjogXCJTd2l0Y2hib2FyZExhYnMgQXR0ZXN0YXRpb24gUXVldWVcIixcbiAgICAgICAgXCJhZGRyZXNzXCI6IFwiMHg1NGY4QTkxYkU1YmFBRDNFMjM2OGIwMEExMWJGNDAxMkVBNmIwMzFGXCJcbiAgICAgIH1cbiAgICBdXG4gIH1cbn1cbmBgYFxuICovXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfQVJCSVRSVU1fQ09ORklHOiBJQ2hhaW5Db25maWcgPSB7XG4gIG1haW5uZXQ6IFNXSVRDSEJPQVJEX0FSQklUUlVNX01BSU5ORVRfQ09ORklHLFxuICB0ZXN0bmV0OiBTV0lUQ0hCT0FSRF9BUkJJVFJVTV9URVNUTkVUX0NPTkZJRyxcbiAgc2Vwb2xpYTogU1dJVENIQk9BUkRfQVJCSVRSVU1fU0VQT0xJQV9DT05GSUcsXG59O1xuIl19