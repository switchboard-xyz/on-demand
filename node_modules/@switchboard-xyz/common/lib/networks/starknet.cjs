"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SWITCHBOARD_STARKNET_CONFIG = exports.SWITCHBOARD_STARKNET_MAINNET_CONFIG = exports.SWITCHBOARD_STARKNET_SEPOLIA_CONFIG = exports.SWITCHBOARD_STARKNET_GOERLI_CONFIG = void 0;
exports.SWITCHBOARD_STARKNET_GOERLI_CONFIG = {
    chain: "starknet",
    networkName: "Goerli",
    address: "0x026183fd8df673e4b2a007eec9d70bc38eb8a0df960dd5b0c57a9250ae2e63ac",
    metadata: {
        defaultRpcUrl: "https://alpha4.starknet.io",
        defaultExplorer: "https://testnet.starkscan.co/",
    },
    chainId: "0x534e5f474f45524c49",
    queues: [],
    attestationQueues: [{ name: "Permissionless", address: "0x1" }],
};
exports.SWITCHBOARD_STARKNET_SEPOLIA_CONFIG = {
    chain: "starknet",
    networkName: "Sepolia",
    address: "",
    metadata: {
        defaultRpcUrl: "",
        defaultExplorer: "https://sepolia.starkscan.co/",
    },
    chainId: "",
    queues: [],
    attestationQueues: [{ name: "Permissionless", address: "" }],
};
exports.SWITCHBOARD_STARKNET_MAINNET_CONFIG = {
    chain: "starknet",
    networkName: "Mainnet",
    address: "0x0728d32b3d508dbe5989824dd0edb1e03b8a319d561b9ec6507dff245a95c52f",
    metadata: {
        defaultRpcUrl: "https://alpha-mainnet.starknet.io",
        defaultExplorer: "https://starkscan.co/",
    },
    chainId: "0x534e5f4d41494e",
    queues: [],
    attestationQueues: [{ name: "Permissionless", address: "0x1" }],
};
exports.SWITCHBOARD_STARKNET_CONFIG = {
    goerli: exports.SWITCHBOARD_STARKNET_GOERLI_CONFIG,
    sepolia: exports.SWITCHBOARD_STARKNET_SEPOLIA_CONFIG,
    mainnet: exports.SWITCHBOARD_STARKNET_MAINNET_CONFIG,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcmtuZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbmV0d29ya3Mvc3RhcmtuZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRWEsUUFBQSxrQ0FBa0MsR0FBMkI7SUFDeEUsS0FBSyxFQUFFLFVBQVU7SUFDakIsV0FBVyxFQUFFLFFBQVE7SUFDckIsT0FBTyxFQUFFLG9FQUFvRTtJQUM3RSxRQUFRLEVBQUU7UUFDUixhQUFhLEVBQUUsNEJBQTRCO1FBQzNDLGVBQWUsRUFBRSwrQkFBK0I7S0FDakQ7SUFDRCxPQUFPLEVBQUUsc0JBQXNCO0lBQy9CLE1BQU0sRUFBRSxFQUFFO0lBQ1YsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7Q0FDaEUsQ0FBQztBQUVXLFFBQUEsbUNBQW1DLEdBQTJCO0lBQ3pFLEtBQUssRUFBRSxVQUFVO0lBQ2pCLFdBQVcsRUFBRSxTQUFTO0lBQ3RCLE9BQU8sRUFBRSxFQUFFO0lBQ1gsUUFBUSxFQUFFO1FBQ1IsYUFBYSxFQUFFLEVBQUU7UUFDakIsZUFBZSxFQUFFLCtCQUErQjtLQUNqRDtJQUNELE9BQU8sRUFBRSxFQUFFO0lBQ1gsTUFBTSxFQUFFLEVBQUU7SUFDVixpQkFBaUIsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsQ0FBQztDQUM3RCxDQUFDO0FBRVcsUUFBQSxtQ0FBbUMsR0FBMkI7SUFDekUsS0FBSyxFQUFFLFVBQVU7SUFDakIsV0FBVyxFQUFFLFNBQVM7SUFDdEIsT0FBTyxFQUFFLG9FQUFvRTtJQUM3RSxRQUFRLEVBQUU7UUFDUixhQUFhLEVBQUUsbUNBQW1DO1FBQ2xELGVBQWUsRUFBRSx1QkFBdUI7S0FDekM7SUFDRCxPQUFPLEVBQUUsa0JBQWtCO0lBQzNCLE1BQU0sRUFBRSxFQUFFO0lBQ1YsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7Q0FDaEUsQ0FBQztBQUVXLFFBQUEsMkJBQTJCLEdBQW9CO0lBQzFELE1BQU0sRUFBRSwwQ0FBa0M7SUFDMUMsT0FBTyxFQUFFLDJDQUFtQztJQUM1QyxPQUFPLEVBQUUsMkNBQW1DO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IElTdGFya25ldENvbmZpZywgSVN0YXJrbmV0TmV0d29ya0NvbmZpZyB9IGZyb20gXCIuL3R5cGVzLmpzXCI7XG5cbmV4cG9ydCBjb25zdCBTV0lUQ0hCT0FSRF9TVEFSS05FVF9HT0VSTElfQ09ORklHOiBJU3RhcmtuZXROZXR3b3JrQ29uZmlnID0ge1xuICBjaGFpbjogXCJzdGFya25ldFwiLFxuICBuZXR3b3JrTmFtZTogXCJHb2VybGlcIixcbiAgYWRkcmVzczogXCIweDAyNjE4M2ZkOGRmNjczZTRiMmEwMDdlZWM5ZDcwYmMzOGViOGEwZGY5NjBkZDViMGM1N2E5MjUwYWUyZTYzYWNcIixcbiAgbWV0YWRhdGE6IHtcbiAgICBkZWZhdWx0UnBjVXJsOiBcImh0dHBzOi8vYWxwaGE0LnN0YXJrbmV0LmlvXCIsXG4gICAgZGVmYXVsdEV4cGxvcmVyOiBcImh0dHBzOi8vdGVzdG5ldC5zdGFya3NjYW4uY28vXCIsXG4gIH0sXG4gIGNoYWluSWQ6IFwiMHg1MzRlNWY0NzRmNDU1MjRjNDlcIixcbiAgcXVldWVzOiBbXSxcbiAgYXR0ZXN0YXRpb25RdWV1ZXM6IFt7IG5hbWU6IFwiUGVybWlzc2lvbmxlc3NcIiwgYWRkcmVzczogXCIweDFcIiB9XSxcbn07XG5cbmV4cG9ydCBjb25zdCBTV0lUQ0hCT0FSRF9TVEFSS05FVF9TRVBPTElBX0NPTkZJRzogSVN0YXJrbmV0TmV0d29ya0NvbmZpZyA9IHtcbiAgY2hhaW46IFwic3RhcmtuZXRcIixcbiAgbmV0d29ya05hbWU6IFwiU2Vwb2xpYVwiLFxuICBhZGRyZXNzOiBcIlwiLFxuICBtZXRhZGF0YToge1xuICAgIGRlZmF1bHRScGNVcmw6IFwiXCIsXG4gICAgZGVmYXVsdEV4cGxvcmVyOiBcImh0dHBzOi8vc2Vwb2xpYS5zdGFya3NjYW4uY28vXCIsXG4gIH0sXG4gIGNoYWluSWQ6IFwiXCIsXG4gIHF1ZXVlczogW10sXG4gIGF0dGVzdGF0aW9uUXVldWVzOiBbeyBuYW1lOiBcIlBlcm1pc3Npb25sZXNzXCIsIGFkZHJlc3M6IFwiXCIgfV0sXG59O1xuXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfU1RBUktORVRfTUFJTk5FVF9DT05GSUc6IElTdGFya25ldE5ldHdvcmtDb25maWcgPSB7XG4gIGNoYWluOiBcInN0YXJrbmV0XCIsXG4gIG5ldHdvcmtOYW1lOiBcIk1haW5uZXRcIixcbiAgYWRkcmVzczogXCIweDA3MjhkMzJiM2Q1MDhkYmU1OTg5ODI0ZGQwZWRiMWUwM2I4YTMxOWQ1NjFiOWVjNjUwN2RmZjI0NWE5NWM1MmZcIixcbiAgbWV0YWRhdGE6IHtcbiAgICBkZWZhdWx0UnBjVXJsOiBcImh0dHBzOi8vYWxwaGEtbWFpbm5ldC5zdGFya25ldC5pb1wiLFxuICAgIGRlZmF1bHRFeHBsb3JlcjogXCJodHRwczovL3N0YXJrc2Nhbi5jby9cIixcbiAgfSxcbiAgY2hhaW5JZDogXCIweDUzNGU1ZjRkNDE0OTRlXCIsXG4gIHF1ZXVlczogW10sXG4gIGF0dGVzdGF0aW9uUXVldWVzOiBbeyBuYW1lOiBcIlBlcm1pc3Npb25sZXNzXCIsIGFkZHJlc3M6IFwiMHgxXCIgfV0sXG59O1xuXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfU1RBUktORVRfQ09ORklHOiBJU3RhcmtuZXRDb25maWcgPSB7XG4gIGdvZXJsaTogU1dJVENIQk9BUkRfU1RBUktORVRfR09FUkxJX0NPTkZJRyxcbiAgc2Vwb2xpYTogU1dJVENIQk9BUkRfU1RBUktORVRfU0VQT0xJQV9DT05GSUcsXG4gIG1haW5uZXQ6IFNXSVRDSEJPQVJEX1NUQVJLTkVUX01BSU5ORVRfQ09ORklHLFxufTtcbiJdfQ==