"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SWITCHBOARD_NEAR_CONFIG = exports.SWITCHBOARD_NEAR_TESTNET_CONFIG = exports.SWITCHBOARD_NEAR_MAINNET_CONFIG = void 0;
exports.SWITCHBOARD_NEAR_MAINNET_CONFIG = {
    chain: "near",
    networkName: "Mainnet",
    address: "switchboard-v2.near",
    metadata: {
        defaultRpcUrl: "https://rpc.mainnet.near.org",
        defaultExplorer: "https://explorer.near.org",
    },
    queues: [
        {
            name: "Permissionless Queue",
            address: "Ztup1aJ8WTe81RZHx7nUP9zxUMrDe9r2TyTCzRzpRoY",
            crankAddress: "HeS3xrDqHA2CSHTmN9osstz8vbXfgh2mmcGixJ1v9NFx",
            permissioned: false,
        },
    ],
    attestationQueues: [],
};
exports.SWITCHBOARD_NEAR_TESTNET_CONFIG = {
    chain: "near",
    networkName: "Testnet",
    address: "switchboard-v2.testnet",
    metadata: {
        defaultRpcUrl: "https://rpc.testnet.near.org",
        defaultExplorer: "https://explorer.testnet.near.org",
    },
    queues: [
        {
            name: "Permissionless Queue",
            address: "HFSJrvA1w2uhciLGLUfE4sADGwGBpUiAjxZPgeFSs61M",
            crankAddress: "9Vzzu1Z74oPLctxwjRHwkKSd5H32AiQe32iMesuQwKnQ",
            permissioned: false,
        },
    ],
    attestationQueues: [],
};
/**
@defaultValue the default near configuration

```json
{
  "mainnet": {
    "chain": "near",
    networkName: "Mainnet",
    "address": "switchboard-v2.near",
    "authority": "sbv2-authority.near",
    "metadata": {
      "defaultRpcUrl": "https://rpc.mainnet.near.org",
      "defaultExplorer": "https://explorer.near.org"
    },
    "queues": [
      {
        "name": "Permissionless Queue",
        "address": "Ztup1aJ8WTe81RZHx7nUP9zxUMrDe9r2TyTCzRzpRoY",
        "authority": "sbv2-authority.near",
        "crankAddress": "HeS3xrDqHA2CSHTmN9osstz8vbXfgh2mmcGixJ1v9NFx",
        "permissioned": true
      }
    ]
  },
  "testnet": {
    "chain": "near",
    "networkName": "Testnet",
    "address": "switchboard-v2.testnet",
    "authority": "sbv2-authority.testnet",
    "metadata": {
      "defaultRpcUrl": "https://rpc.testnet.near.org",
      "defaultExplorer": "https://explorer.testnet.near.org"
    },
    "queues": [
      {
        "name": "Permissionless Queue",
        "address": "HFSJrvA1w2uhciLGLUfE4sADGwGBpUiAjxZPgeFSs61M",
        "authority": "sbv2-authority.testnet",
        "crankAddress": "9Vzzu1Z74oPLctxwjRHwkKSd5H32AiQe32iMesuQwKnQ",
        "permissioned": false
      }
    ]
  }
}
```
 */
exports.SWITCHBOARD_NEAR_CONFIG = {
    mainnet: exports.SWITCHBOARD_NEAR_MAINNET_CONFIG,
    testnet: exports.SWITCHBOARD_NEAR_TESTNET_CONFIG,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVhci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9uZXR3b3Jrcy9uZWFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVhLFFBQUEsK0JBQStCLEdBQXdCO0lBQ2xFLEtBQUssRUFBRSxNQUFNO0lBQ2IsV0FBVyxFQUFFLFNBQVM7SUFDdEIsT0FBTyxFQUFFLHFCQUFxQjtJQUM5QixRQUFRLEVBQUU7UUFDUixhQUFhLEVBQUUsOEJBQThCO1FBQzdDLGVBQWUsRUFBRSwyQkFBMkI7S0FDN0M7SUFDRCxNQUFNLEVBQUU7UUFDTjtZQUNFLElBQUksRUFBRSxzQkFBc0I7WUFDNUIsT0FBTyxFQUFFLDZDQUE2QztZQUN0RCxZQUFZLEVBQUUsOENBQThDO1lBQzVELFlBQVksRUFBRSxLQUFLO1NBQ3BCO0tBQ0Y7SUFDRCxpQkFBaUIsRUFBRSxFQUFFO0NBQ3RCLENBQUM7QUFFVyxRQUFBLCtCQUErQixHQUF3QjtJQUNsRSxLQUFLLEVBQUUsTUFBTTtJQUNiLFdBQVcsRUFBRSxTQUFTO0lBQ3RCLE9BQU8sRUFBRSx3QkFBd0I7SUFDakMsUUFBUSxFQUFFO1FBQ1IsYUFBYSxFQUFFLDhCQUE4QjtRQUM3QyxlQUFlLEVBQUUsbUNBQW1DO0tBQ3JEO0lBQ0QsTUFBTSxFQUFFO1FBQ047WUFDRSxJQUFJLEVBQUUsc0JBQXNCO1lBQzVCLE9BQU8sRUFBRSw4Q0FBOEM7WUFDdkQsWUFBWSxFQUFFLDhDQUE4QztZQUM1RCxZQUFZLEVBQUUsS0FBSztTQUNwQjtLQUNGO0lBQ0QsaUJBQWlCLEVBQUUsRUFBRTtDQUN0QixDQUFDO0FBRUY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTZDRztBQUNVLFFBQUEsdUJBQXVCLEdBQWlCO0lBQ25ELE9BQU8sRUFBRSx1Q0FBK0I7SUFDeEMsT0FBTyxFQUFFLHVDQUErQjtDQUN6QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBJQ2hhaW5Db25maWcsIElDaGFpbk5ldHdvcmtDb25maWcgfSBmcm9tIFwiLi90eXBlcy5qc1wiO1xuXG5leHBvcnQgY29uc3QgU1dJVENIQk9BUkRfTkVBUl9NQUlOTkVUX0NPTkZJRzogSUNoYWluTmV0d29ya0NvbmZpZyA9IHtcbiAgY2hhaW46IFwibmVhclwiLFxuICBuZXR3b3JrTmFtZTogXCJNYWlubmV0XCIsXG4gIGFkZHJlc3M6IFwic3dpdGNoYm9hcmQtdjIubmVhclwiLFxuICBtZXRhZGF0YToge1xuICAgIGRlZmF1bHRScGNVcmw6IFwiaHR0cHM6Ly9ycGMubWFpbm5ldC5uZWFyLm9yZ1wiLFxuICAgIGRlZmF1bHRFeHBsb3JlcjogXCJodHRwczovL2V4cGxvcmVyLm5lYXIub3JnXCIsXG4gIH0sXG4gIHF1ZXVlczogW1xuICAgIHtcbiAgICAgIG5hbWU6IFwiUGVybWlzc2lvbmxlc3MgUXVldWVcIixcbiAgICAgIGFkZHJlc3M6IFwiWnR1cDFhSjhXVGU4MVJaSHg3blVQOXp4VU1yRGU5cjJUeVRDelJ6cFJvWVwiLFxuICAgICAgY3JhbmtBZGRyZXNzOiBcIkhlUzN4ckRxSEEyQ1NIVG1OOW9zc3R6OHZiWGZnaDJtbWNHaXhKMXY5TkZ4XCIsXG4gICAgICBwZXJtaXNzaW9uZWQ6IGZhbHNlLFxuICAgIH0sXG4gIF0sXG4gIGF0dGVzdGF0aW9uUXVldWVzOiBbXSxcbn07XG5cbmV4cG9ydCBjb25zdCBTV0lUQ0hCT0FSRF9ORUFSX1RFU1RORVRfQ09ORklHOiBJQ2hhaW5OZXR3b3JrQ29uZmlnID0ge1xuICBjaGFpbjogXCJuZWFyXCIsXG4gIG5ldHdvcmtOYW1lOiBcIlRlc3RuZXRcIixcbiAgYWRkcmVzczogXCJzd2l0Y2hib2FyZC12Mi50ZXN0bmV0XCIsXG4gIG1ldGFkYXRhOiB7XG4gICAgZGVmYXVsdFJwY1VybDogXCJodHRwczovL3JwYy50ZXN0bmV0Lm5lYXIub3JnXCIsXG4gICAgZGVmYXVsdEV4cGxvcmVyOiBcImh0dHBzOi8vZXhwbG9yZXIudGVzdG5ldC5uZWFyLm9yZ1wiLFxuICB9LFxuICBxdWV1ZXM6IFtcbiAgICB7XG4gICAgICBuYW1lOiBcIlBlcm1pc3Npb25sZXNzIFF1ZXVlXCIsXG4gICAgICBhZGRyZXNzOiBcIkhGU0pydkExdzJ1aGNpTEdMVWZFNHNBREd3R0JwVWlBanhaUGdlRlNzNjFNXCIsXG4gICAgICBjcmFua0FkZHJlc3M6IFwiOVZ6enUxWjc0b1BMY3R4d2pSSHdrS1NkNUgzMkFpUWUzMmlNZXN1UXdLblFcIixcbiAgICAgIHBlcm1pc3Npb25lZDogZmFsc2UsXG4gICAgfSxcbiAgXSxcbiAgYXR0ZXN0YXRpb25RdWV1ZXM6IFtdLFxufTtcblxuLyoqXG5AZGVmYXVsdFZhbHVlIHRoZSBkZWZhdWx0IG5lYXIgY29uZmlndXJhdGlvblxuXG5gYGBqc29uXG57XG4gIFwibWFpbm5ldFwiOiB7XG4gICAgXCJjaGFpblwiOiBcIm5lYXJcIixcbiAgICBuZXR3b3JrTmFtZTogXCJNYWlubmV0XCIsXG4gICAgXCJhZGRyZXNzXCI6IFwic3dpdGNoYm9hcmQtdjIubmVhclwiLFxuICAgIFwiYXV0aG9yaXR5XCI6IFwic2J2Mi1hdXRob3JpdHkubmVhclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJkZWZhdWx0UnBjVXJsXCI6IFwiaHR0cHM6Ly9ycGMubWFpbm5ldC5uZWFyLm9yZ1wiLFxuICAgICAgXCJkZWZhdWx0RXhwbG9yZXJcIjogXCJodHRwczovL2V4cGxvcmVyLm5lYXIub3JnXCJcbiAgICB9LFxuICAgIFwicXVldWVzXCI6IFtcbiAgICAgIHtcbiAgICAgICAgXCJuYW1lXCI6IFwiUGVybWlzc2lvbmxlc3MgUXVldWVcIixcbiAgICAgICAgXCJhZGRyZXNzXCI6IFwiWnR1cDFhSjhXVGU4MVJaSHg3blVQOXp4VU1yRGU5cjJUeVRDelJ6cFJvWVwiLFxuICAgICAgICBcImF1dGhvcml0eVwiOiBcInNidjItYXV0aG9yaXR5Lm5lYXJcIixcbiAgICAgICAgXCJjcmFua0FkZHJlc3NcIjogXCJIZVMzeHJEcUhBMkNTSFRtTjlvc3N0ejh2YlhmZ2gybW1jR2l4SjF2OU5GeFwiLFxuICAgICAgICBcInBlcm1pc3Npb25lZFwiOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9LFxuICBcInRlc3RuZXRcIjoge1xuICAgIFwiY2hhaW5cIjogXCJuZWFyXCIsXG4gICAgXCJuZXR3b3JrTmFtZVwiOiBcIlRlc3RuZXRcIixcbiAgICBcImFkZHJlc3NcIjogXCJzd2l0Y2hib2FyZC12Mi50ZXN0bmV0XCIsXG4gICAgXCJhdXRob3JpdHlcIjogXCJzYnYyLWF1dGhvcml0eS50ZXN0bmV0XCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcImRlZmF1bHRScGNVcmxcIjogXCJodHRwczovL3JwYy50ZXN0bmV0Lm5lYXIub3JnXCIsXG4gICAgICBcImRlZmF1bHRFeHBsb3JlclwiOiBcImh0dHBzOi8vZXhwbG9yZXIudGVzdG5ldC5uZWFyLm9yZ1wiXG4gICAgfSxcbiAgICBcInF1ZXVlc1wiOiBbXG4gICAgICB7XG4gICAgICAgIFwibmFtZVwiOiBcIlBlcm1pc3Npb25sZXNzIFF1ZXVlXCIsXG4gICAgICAgIFwiYWRkcmVzc1wiOiBcIkhGU0pydkExdzJ1aGNpTEdMVWZFNHNBREd3R0JwVWlBanhaUGdlRlNzNjFNXCIsXG4gICAgICAgIFwiYXV0aG9yaXR5XCI6IFwic2J2Mi1hdXRob3JpdHkudGVzdG5ldFwiLFxuICAgICAgICBcImNyYW5rQWRkcmVzc1wiOiBcIjlWenp1MVo3NG9QTGN0eHdqUkh3a0tTZDVIMzJBaVFlMzJpTWVzdVF3S25RXCIsXG4gICAgICAgIFwicGVybWlzc2lvbmVkXCI6IGZhbHNlXG4gICAgICB9XG4gICAgXVxuICB9XG59XG5gYGBcbiAqL1xuZXhwb3J0IGNvbnN0IFNXSVRDSEJPQVJEX05FQVJfQ09ORklHOiBJQ2hhaW5Db25maWcgPSB7XG4gIG1haW5uZXQ6IFNXSVRDSEJPQVJEX05FQVJfTUFJTk5FVF9DT05GSUcsXG4gIHRlc3RuZXQ6IFNXSVRDSEJPQVJEX05FQVJfVEVTVE5FVF9DT05GSUcsXG59O1xuIl19